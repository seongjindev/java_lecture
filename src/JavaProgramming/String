문자열 클래스
문자열을 다루는 String 클래스와 이를 보완한 StringBuffer, String Builder클래스에 대해서 학습합니다

String 객체와 메모리
문자열을 다루는 String 클래스(객체)는 데이터 변화면 메모리상의 변화가 많아 속도가 느리다
String str = "Java";
str = str+"_8";
문자열이 변경되면 기존의 객체를 버리고, 새로운 객체를 메모리에 생성한다. 이때, 기존 객체는 GC에 의해서 메모리 회수가 이루어진다.

StringBulider, StringBuffer
String 클래스의 단점을 보완한 클래스로 데이터가 변경되면 메모리에서 기존 객체를 재활용한다
문자열이 변경되면 기존의 객체를 재활용한다
속도는 StringBulider가 조금 더 빠르며, 데이터 안정성은 StringBuffer가 조금 더 좋다

가장 큰 차이점은 동기화의 유무로써 StringBuffer는 동기화 키워드를 지원하여 멀티쓰레드 환경에서 안전하다는 점(thread-safe) 입니다.
참고로 String도 불변성을 가지기때문에 마찬가지로 멀티쓰레드 환경에서의 안정성(thread-safe)을 가지고 있습니다.
반대로 StringBuilder는 동기화를 지원하지 않기때문에 멀티쓰레드 환경에서 사용하는 것은 적합하지 않지만 동기화를 고려하지 않는 만큼 단일쓰레드에서의 성능은 StringBuffer 보다 뛰어납니다.
출처: https://ifuwanna.tistory.com/221 [IfUwanna IT]